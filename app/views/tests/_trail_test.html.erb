<%= turbo_frame_tag :trail_test do %>
  <div class="card">
    <% if @test.completed? %>
      <p> test completed</p>
    <% else %>
      <div>
        <div class="flex-column">
          <h1 class="center">Trail Making Test</h1>
          <h2 class="center">
            Stage <%= @test.current_stage.upcase %>
          </h2>
          <a href="https://www.center-tbi.eu/files/approved-translations/English/ENGLISH_TMT.pdf">
            Click here to learn how to administer the test (credit to Center for Traumatic Brain Injury in Antwerp)
          </a>
          <% if @test.curr_stage_start_time %>
            <h3 class="center">
              <span id="timer">
                <%= (Time.now - @test.curr_stage_start_time.to_time).round %>
              </span>
            </h3>
            <div class="multiline-flex divider-bottom">
              <p class="label">mark error:</p>
              <%= render partial: "tests/auditory/words",
                               :locals => {
                                   :styling => "primary",
                                 :stage => @test.current_stage,
                                 :words => @test.trail_options,
                               } %>
            </div>
            <% if @test.current_list.count > 0 %>
              <div class="multiline-flex">
                <p class="label">Mistakes:</p>
                <% @test.current_list.each_with_index do |item, i| %>
                  <%= render partial: "tests/auditory/delete_entry",
                                       :locals => { :stage => @test.current_stage, :word => item.upcase, :index => i } %>
                <% end %>
              </div>
            <% end %>
            <div class="begin">
              <%= render partial: "tests/auditory/next_stage", :locals => {:stage => @test.current_stage }%>
            </div>
          <% else %>
            <div class="begin">
              <%= render partial: 'tests/fluency/add_entry',            
                  :locals => { :stage => @test.current_stage, :begin_button => true } %>
            </div>
          <% end %>
        </div>
      </div>
    <% end %>
  </div>
  <script>
    window.ts = new Date(Date.parse('<%= @test.curr_stage_start_time %>'));
  </script>
<% end %>
<script>
  setInterval(() => {
    let timer = document.getElementById('timer');
    if (timer) {
      let secondsPassed = Math.round((new Date() - window.ts) / 100) / 10;
      timer.textContent = secondsPassed;
    }
  }, 100);
</script>
